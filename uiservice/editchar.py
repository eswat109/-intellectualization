# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'editchar.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from dbserver.charmanager import CharManager


class Ui_MainWindow(object):

    def setEnabledElems(self, flag: bool):
            self.radioButtonEmpty.setEnabled(flag)
            self.radioButtonInt.setEnabled(flag)
            self.radioButtonLog.setEnabled(flag)
            self.radioButtonEnum.setEnabled(flag)
            self.tabWidget.setEnabled(flag)

    def comboBoxChanged(self):
        ind = self.comboBoxChar.currentIndex()
        if ind == 0:
            self.setEnabledElems(False)
        else:
            self.setEnabledElems(True)
            self.obj = self.CM.findbyname(self.names[ind])[0]
            type = self.obj['type']
            if not type:
                self.radioButtonEmpty.toggle()
            elif type == self.CM.types['int']:
                self.radioButtonInt.toggle()
            elif type == self.CM.types['log']:
                self.radioButtonLog.toggle()
            elif type == self.CM.types['enum']:
                self.radioButtonEnum.toggle()

    def setComboBox(self):
        self.data = self.CM.findall()
        self.names = [d['name'] for d in self.data]
        self.names.insert(0, '')
        for n in self.names:
            self.comboBoxChar.addItem(n)

    def contsetUp(self):
        self.radioButtonEmpty.setHidden(True)
        self.tabWidget.tabBar().setHidden(True)
        self.setEnabledElems(False)
        self.radioButtonEmpty.tabIndex = 0
        self.radioButtonInt.tabIndex = 1
        self.radioButtonLog.tabIndex = 2
        self.radioButtonEnum.tabIndex = 3
        self.setComboBox()


    def setupUi(self, MainWindow):
        self.CM = CharManager()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(492, 492)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_Char = QtWidgets.QLabel(self.centralwidget)
        self.label_Char.setGeometry(QtCore.QRect(50, 20, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Char.setFont(font)
        self.label_Char.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_Char.setObjectName("label_Char")
        self.comboBoxChar = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxChar.setGeometry(QtCore.QRect(200, 20, 221, 22))
        self.comboBoxChar.setObjectName("comboBoxChar")
        self.label_Type = QtWidgets.QLabel(self.centralwidget)
        self.label_Type.setGeometry(QtCore.QRect(50, 60, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Type.setFont(font)
        self.label_Type.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_Type.setObjectName("label_Type")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(200, 60, 160, 103))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.radioButtonInt = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButtonInt.setObjectName("radioButtonInt")
        self.verticalLayout.addWidget(self.radioButtonInt)
        self.radioButtonLog = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButtonLog.setObjectName("radioButtonLog")
        self.verticalLayout.addWidget(self.radioButtonLog)
        self.radioButtonEnum = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButtonEnum.setObjectName("radioButtonEnum")
        self.verticalLayout.addWidget(self.radioButtonEnum)
        self.radioButtonEmpty = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radioButtonEmpty.setEnabled(True)
        self.radioButtonEmpty.setChecked(True)
        self.radioButtonEmpty.setObjectName("radioButtonEmpty")
        self.radioButtonEmpty.isChecked()
        self.verticalLayout.addWidget(self.radioButtonEmpty)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(20, 160, 451, 241))
        self.tabWidget.setObjectName("tabWidget")
        self.tabEmpty = QtWidgets.QWidget()
        self.tabEmpty.setObjectName("tabEmpty")
        self.tabWidget.addTab(self.tabEmpty, "")
        self.tab_Int = QtWidgets.QWidget()
        self.tab_Int.setObjectName("tab_Int")
        self.labelTo = QtWidgets.QLabel(self.tab_Int)
        self.labelTo.setGeometry(QtCore.QRect(70, 110, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelTo.setFont(font)
        self.labelTo.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelTo.setObjectName("labelTo")
        self.labelFrom = QtWidgets.QLabel(self.tab_Int)
        self.labelFrom.setGeometry(QtCore.QRect(70, 70, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelFrom.setFont(font)
        self.labelFrom.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelFrom.setObjectName("labelFrom")
        self.lineFrom = QtWidgets.QLineEdit(self.tab_Int)
        self.lineFrom.setGeometry(QtCore.QRect(230, 70, 113, 22))
        self.lineFrom.setObjectName("lineFrom")
        self.lineTo = QtWidgets.QLineEdit(self.tab_Int)
        self.lineTo.setGeometry(QtCore.QRect(230, 110, 113, 22))
        self.lineTo.setObjectName("lineTo")
        self.tabWidget.addTab(self.tab_Int, "")
        self.tab_Log = QtWidgets.QWidget()
        self.tab_Log.setObjectName("tab_Log")
        self.lineFalse = QtWidgets.QLineEdit(self.tab_Log)
        self.lineFalse.setGeometry(QtCore.QRect(230, 110, 113, 22))
        self.lineFalse.setObjectName("lineFalse")
        self.labelFalse = QtWidgets.QLabel(self.tab_Log)
        self.labelFalse.setGeometry(QtCore.QRect(60, 110, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelFalse.setFont(font)
        self.labelFalse.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelFalse.setObjectName("labelFalse")
        self.labelTrue = QtWidgets.QLabel(self.tab_Log)
        self.labelTrue.setGeometry(QtCore.QRect(60, 70, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelTrue.setFont(font)
        self.labelTrue.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelTrue.setObjectName("labelTrue")
        self.lineTrue = QtWidgets.QLineEdit(self.tab_Log)
        self.lineTrue.setGeometry(QtCore.QRect(230, 70, 113, 22))
        self.lineTrue.setObjectName("lineTrue")
        self.tabWidget.addTab(self.tab_Log, "")
        self.tab_Enum = QtWidgets.QWidget()
        self.tab_Enum.setObjectName("tab_Enum")
        self.lineEditEnum = QtWidgets.QLineEdit(self.tab_Enum)
        self.lineEditEnum.setGeometry(QtCore.QRect(50, 20, 171, 28))
        self.lineEditEnum.setObjectName("lineEditEnum")
        self.pushButtonEnumAdd = QtWidgets.QPushButton(self.tab_Enum)
        self.pushButtonEnumAdd.setGeometry(QtCore.QRect(280, 20, 93, 28))
        self.pushButtonEnumAdd.setObjectName("pushButtonEnumAdd")
        self.tableWidgetValues = QtWidgets.QTableWidget(self.tab_Enum)
        self.tableWidgetValues.setGeometry(QtCore.QRect(50, 70, 231, 121))
        self.tableWidgetValues.setObjectName("tableWidgetValues")
        self.pushButtonEnumDel = QtWidgets.QPushButton(self.tab_Enum)
        self.pushButtonEnumDel.setGeometry(QtCore.QRect(300, 70, 71, 28))
        self.pushButtonEnumDel.setObjectName("pushButtonEnumDel")
        self.tabWidget.addTab(self.tab_Enum, "")
        self.pushButtonSave = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonSave.setGeometry(QtCore.QRect(380, 410, 93, 28))
        self.pushButtonSave.setObjectName("pushButtonSave")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 492, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.contsetUp()

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Возможные значения характеристик"))
        self.label_Char.setText(_translate("MainWindow", "Характеристика"))
        self.label_Type.setText(_translate("MainWindow", "Тип"))
        self.radioButtonInt.setText(_translate("MainWindow", "Числовой"))
        self.radioButtonLog.setText(_translate("MainWindow", "Логический"))
        self.radioButtonEnum.setText(_translate("MainWindow", "Перечислимый"))
        self.radioButtonEmpty.setText(_translate("MainWindow", "Пустой"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabEmpty), _translate("MainWindow", "empty"))
        self.labelTo.setText(_translate("MainWindow", "Значение до"))
        self.labelFrom.setText(_translate("MainWindow", "Значение от"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Int), _translate("MainWindow", "int"))
        self.labelFalse.setText(_translate("MainWindow", "Ложь"))
        self.labelTrue.setText(_translate("MainWindow", "Правда"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Log), _translate("MainWindow", "log"))
        self.pushButtonEnumAdd.setText(_translate("MainWindow", "Добавить"))
        self.pushButtonEnumDel.setText(_translate("MainWindow", "Удалить"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Enum), _translate("MainWindow", "enum"))
        self.pushButtonSave.setText(_translate("MainWindow", "Сохранить"))

class EditCharWindow(QtWidgets.QMainWindow, Ui_MainWindow):

    def setUpTable(self):
        values = self.CM.__splitvalues__((self.obj['cvalues']))
        self.tableWidgetValues.setHorizontalHeaderLabels(['values'])
        self.tableWidgetValues.setRowCount(len(values))
        self.tableWidgetValues.setColumnCount(1)
        for i, d in enumerate(values):
            value = str(values[i])
            item = QtWidgets.QTableWidgetItem(value)
            item.setTextAlignment(Qt.AlignCenter)
            item.setFlags(item.flags() & ~QtCore.Qt.ItemFlag.ItemIsEditable)
            self.tableWidgetValues.setItem(i, 0, item)

    def getValuesFromTable(self):
        values = []
        for i in range(self.tableWidgetValues.rowCount()):
            values.append(self.tableWidgetValues.item(i, 0).text())
        return values

    def addBtnPush(self):
        value = self.lineEditEnum.text()
        if value in self.getValuesFromTable():
            return
        self.tableWidgetValues.setRowCount(self.tableWidgetValues.rowCount()+1)
        item = QtWidgets.QTableWidgetItem(value)
        item.setTextAlignment(Qt.AlignCenter)
        item.setFlags(item.flags() & ~QtCore.Qt.ItemFlag.ItemIsEditable)
        self.tableWidgetValues.setItem(self.tableWidgetValues.rowCount()-1, 0, item)

    def delBtnush(self):
        ind = self.tableWidgetValues.currentRow()
        self.tableWidgetValues.removeRow(ind)

    def clearAllWidgets(self):
        self.lineFrom.setText('')
        self.lineTo.setText('')
        self.lineTrue.setText('')
        self.lineFalse.setText('')
        self.lineEditEnum.setText('')
        self.tableWidgetValues.clear()
        self.tableWidgetValues.setRowCount(0)
        self.tableWidgetValues.setColumnCount(0)

    def saveBtnPush(self):
        id = self.obj['id']
        type = None
        cvalues = []
        if self.radioButtonEmpty.isChecked():
            pass
        elif self.radioButtonInt.isChecked():
            type = self.CM.types['int']
            cvalues.append(self.lineFrom.text())
            cvalues.append(self.lineTo.text())
        elif self.radioButtonLog.isChecked():
            type = self.CM.types['log']
            cvalues.append(self.lineTrue.text())
            cvalues.append(self.lineFalse.text())
        elif self.radioButtonEnum.isChecked():
            type = self.CM.types['enum']
            cvalues = self.getValuesFromTable()
        self.CM.updatetype(id, type)
        self.CM.deletevalue(id)
        for v in cvalues:
            self.CM.addvalue(id, v)



    def radioBtnClicked(self, val):
        indexes = {'Пустой': 0, 'Перечислимый': 3, 'Логический': 2, 'Числовой': 1}
        rb = self.sender()
        values = self.CM.__splitvalues__((self.obj['cvalues']))
        if rb.isChecked():
            i = rb.tabIndex
            self.tabWidget.setCurrentIndex(i)
            if values:
                self.clearAllWidgets()
                if i == 0:
                    pass
                elif i == 1:
                    self.lineFrom.setText(values[0])
                    self.lineTo.setText(values[1])
                elif i == 2:
                    self.lineTrue.setText(values[0])
                    self.lineFalse.setText(values[1])
                elif i == 3:
                    self.setUpTable()

    def setConnect(self):
        self.comboBoxChar.currentIndexChanged.connect(self.comboBoxChanged)
        self.radioButtonEmpty.toggled.connect(self.radioBtnClicked)
        self.radioButtonInt.toggled.connect(self.radioBtnClicked)
        self.radioButtonLog.toggled.connect(self.radioBtnClicked)
        self.radioButtonEnum.toggled.connect(self.radioBtnClicked)
        self.pushButtonEnumAdd.clicked.connect(self.addBtnPush)
        self.pushButtonEnumDel.clicked.connect(self.delBtnush)
        self.pushButtonSave.clicked.connect(self.saveBtnPush)

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)
        self.setConnect()
        self.tabWidget.setCurrentIndex(0)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    #MainWindow = QtWidgets.QMainWindow()
    #ui = Ui_MainWindow()
    #ui.setupUi(MainWindow)
    editcharwin = EditCharWindow()
    editcharwin.show()
    sys.exit(app.exec_())